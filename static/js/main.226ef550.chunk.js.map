{"version":3,"sources":["actions/actions.js","components/HomePage/Input/Input.js","components/HomePage/SearchedWeather/Add/Add.js","components/HomePage/SearchedWeather/SearchedWeather.js","components/Buttons/Refresh/Refresh.js","components/Buttons/Delete/Delete.js","components/Buttons/Buttons.js","components/HomePage/Cards/Card/Card.js","components/HomePage/Cards/Cards.js","components/HomePage/HomePage.js","components/Info/Info.js","reducers/rootReducer.js","App.js","index.js"],"names":["setStorage","data","type","connect","dispatch","setData","useState","city","setCity","className","onSubmit","e","preventDefault","axios","get","then","res","onChange","target","value","placeholder","disabled","state","currentCity","storage","addCity","includes","name","onClick","localStorage","setItem","getItem","JSON","stringify","parse","sys","country","Math","round","main","temp","temp_max","temp_min","Refresh","setRefresh","refresh","console","log","id","removeCity","info","useEffect","Buttons","setInfo","feels_like","to","pathname","map","index","key","toString","HomePage","Info","location","handleTime","time","moment","unix","format","weather","pressure","humidity","wind","speed","sunrise","sunset","initState","rootReducer","action","filter","val","store","createStore","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.226ef550.chunk.js","sourcesContent":["//Set searched city\r\nexport const setData = (data) => {\r\n\treturn {\r\n\t\ttype: \"SET_CITY\",\r\n\t\tdata\r\n\t}\r\n}\r\n\r\n//Set storage of cities\r\nexport const setStorage = (data) => {\r\n\treturn {\r\n\t\ttype: \"SET_STORAGE\",\r\n\t\tdata\r\n\t}\r\n}\r\n\r\n//Add city to storage\r\nexport const addCity = (data) => {\r\n\treturn {\r\n\t\ttype: \"ADD_CITY\",\r\n\t\tdata\r\n\t}\r\n}\r\n\r\n//Remove city from storage\r\nexport const removeCity = (data) => {\r\n\treturn {\r\n\t\ttype: \"REMOVE_CITY\",\r\n\t\tdata\r\n\t}\r\n}\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport './Input.css';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { setData } from '../../../actions/actions';\r\n\r\nconst Input = ({ setData }) => {\r\n\r\n\tconst [city, setCity] = useState('')\r\n\r\n\tconst API_KEY = \"6c2847c395792f9cf85a804db24ced16\";\r\n\r\n\t//Handling search submit\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault()\r\n\t\tif (city) {\r\n\t\t\taxios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&APPID=${API_KEY}`)\r\n\t\t\t\t.then(res => setData(res.data))\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"input\">\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t<input className=\"input__search\" onChange={(e) => setCity(e.target.value)} placeholder=\"search city...\" type=\"text\" />\r\n\t\t\t\t<input className=\"input__submit\" disabled={city === ''} value=\"Search\" type=\"submit\" />\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsetData: (data) => { dispatch(setData(data)) },\r\n\t}\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Input);","import React from 'react';\r\nimport './Add.css'\r\nimport { connect } from 'react-redux';\r\nimport { setStorage, addCity } from '../../../../actions/actions';\r\n\r\nconst Add = ({ currentCity, setStorage, storage, addCity }) => {\r\n\r\n  //Adding city to favourite\r\n  const addToFavourite = () => {\r\n    localStorage.setItem('fav', localStorage.getItem('fav') ?\r\n\r\n      JSON.stringify([...JSON.parse(localStorage.getItem('fav')), currentCity.name]) :\r\n      JSON.stringify([currentCity.name]))\r\n\r\n    addCity(currentCity.name);\r\n    setStorage(JSON.parse(localStorage.getItem('fav')))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"add\" disabled={storage.includes(currentCity.name)} onClick={addToFavourite}>Add to favourite</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentCity: state.currentCity,\r\n    storage: state.storage\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setStorage: (data) => { dispatch(setStorage(data)) },\r\n    addCity: (data) => { dispatch(addCity(data)) }\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Add);","import React from 'react';\r\nimport './SearchedWeather.css';\r\nimport { connect } from 'react-redux';\r\nimport Add from './Add/Add';\r\n\r\nconst SearchedWeather = ({ currentCity }) => (\r\n\t<div className=\"searchedweather\">\r\n\t\t{currentCity ?\r\n\t\t\t(<div className=\"searchedweather__inner\">\r\n\t\t\t\t<h1>\r\n\t\t\t\t\t{currentCity.name}, {currentCity.sys.country}\r\n\t\t\t\t</h1>\r\n\t\t\t\t<h2>\r\n\t\t\t\t\t{`${Math.round(currentCity.main.temp)}\\u00B0C`}\r\n\t\t\t\t</h2>\r\n\t\t\t\t<p>{`Max: ${Math.round(currentCity.main.temp_max)}\\u00B0C `}\r\n\t\t\t\t\t{`Min: ${Math.round(currentCity.main.temp_min)}\\u00B0C `}\r\n\t\t\t\t</p>\r\n\t\t\t\t<Add />\r\n\t\t\t</div>\r\n\t\t\t) : <h2 className=\"weather-empty\">Search for any city</h2>}\r\n\t</div>\r\n);\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tcurrentCity: state.currentCity\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps)(SearchedWeather);","import React from 'react';\r\n\r\nconst Refresh = ({ setRefresh, refresh }) => {\r\n\r\n\t//Refresh button method\r\n\tconst handleRefresh = () => {\r\n\t\tsetRefresh(!refresh)\r\n\t\tconsole.log('refreshed!')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button className=\"button\" onClick={handleRefresh}>Refresh</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Refresh;","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setStorage, removeCity } from '../../../actions/actions';\r\n\r\nconst Delete = ({ info, setStorage, removeCity, id }) => {\r\n  \r\n  //Handling delete button\r\n  const handleDelete = () => {\r\n    removeCity(info.name)\r\n  }\r\n  //Delete method\r\n  useEffect(() => {\r\n    localStorage.setItem('fav', JSON.stringify(id))\r\n    setStorage(JSON.parse(localStorage.getItem('fav')))\r\n  }, [id, setStorage])\r\n\r\n  return (\r\n    <div>\r\n      <button className=\"button delete\" onClick={handleDelete}>Delete</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    id: state.id\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setStorage: (data) => { dispatch(setStorage(data)) },\r\n    removeCity: (data) => { dispatch(removeCity(data)) }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Delete);","import React from 'react';\r\nimport Refresh from './Refresh/Refresh';\r\nimport Delete from './Delete/Delete';\r\nimport './Buttons.css';\r\n\r\nconst Buttons = ({ info, setRefresh, refresh }) => (\r\n\t\t<div>\r\n\t\t\t<Refresh setRefresh={setRefresh} refresh={refresh} />\r\n\t\t\t<Delete info={info} />\r\n\t\t</div>\r\n\t);\r\n\r\nexport default Buttons;","import React, { useState, useEffect } from 'react';\r\nimport './Card.css'\r\nimport axios from 'axios';\r\nimport Buttons from '../../../Buttons/Buttons';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Card = ({ city, storage }) => {\r\n  const API_KEY = \"6c2847c395792f9cf85a804db24ced16\";\r\n  \r\n  const [info, setInfo] = useState('');\r\n  const [refresh, setRefresh] = useState(false)\r\n\r\n  //Fetching data by refresh click or when city storage has changed\r\n  useEffect(() => {\r\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&APPID=${API_KEY}`)\r\n      .then(res => setInfo(res.data))\r\n  }, [storage, refresh, city])\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      {info ?\r\n        (<div className=\"card__inner\">\r\n          <h2 className=\"card__heading\">\r\n            {info.name}, {info.sys.country}\r\n          </h2>\r\n          <h3>\r\n            {`${Math.round(info.main.temp)}\\u00B0C`}\r\n          </h3>\r\n          <p>{`Feels like: ${Math.round(info.main.feels_like)}\\u00B0C`}</p>\r\n          <Buttons info={info} setRefresh={setRefresh} refresh={refresh} />\r\n          <Link className=\"card__link\" to={{ pathname: '/info', state: info }}>Show info</Link>\r\n        </div>) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    storage: state.storage\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Card);","import React from 'react';\r\nimport './Cards.css'\r\nimport Card from './Card/Card';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Cards = ({ storage }) => (\r\n  <div className=\"cards\">\r\n    {storage[0] ?\r\n      storage.map((city, index) =>\r\n        <div key={index.toString()}>\r\n          <Card city={city} />\r\n        </div>) :\r\n      <h2 className=\"favourite-empty\">No choosen cities yet</h2>}\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    storage: state.storage\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Cards);","import React from 'react';\r\nimport Input from './Input/Input';\r\nimport SearchedWeather from './SearchedWeather/SearchedWeather';\r\nimport Cards from './Cards/Cards';\r\nimport './HomePage.css';\r\n\r\nconst HomePage = () => (\r\n    <div className=\"homepage\">\r\n      <Input />\r\n      <div className=\"weather-container\">\r\n        <SearchedWeather />\r\n        <Cards />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport './Info.css';\r\nimport moment from 'moment';\r\n\r\nconst Info = ({ location }) => {\r\n\r\n\t//time formating\r\n\tconst handleTime = (time) => {\r\n\t\treturn moment.unix(time).format(\"HH:mm\")\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"info\">\r\n\t\t\t\t<h1>{location.state.name}, {location.state.sys.country}</h1>\r\n\t\t\t\t<h2>{`${Math.round(location.state.main.temp)}\\u00B0C`}</h2>\r\n\t\t\t\t<h3>{location.state.weather[0].main}</h3>\r\n\t\t\t\t<h3>{`Max: ${Math.round(location.state.main.temp_max)}\\u00B0C`} {`Min: ${Math.round(location.state.main.temp_min)}\\u00B0C`}</h3>\r\n\t\t\t\t<h4>{`Feels like: ${Math.round(location.state.main.feels_like)}\\u00B0C`}</h4>\r\n\t\t\t\t<h4>Pressure: {Math.round(location.state.main.pressure) + 'mm'}  Humidity: {Math.round(location.state.main.humidity) + '%'}</h4>\r\n\t\t\t\t<h5>Wind speed: {location.state.wind.speed + 'm/s'}</h5>\r\n\t\t\t\t<h5>Sunrise: {handleTime(location.state.sys.sunrise)}  Sunset: {handleTime(location.state.sys.sunset)}</h5>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Info;","const initState = {\r\n\tcurrentCity: '',\r\n\tstorage: JSON.parse(localStorage.getItem('fav')) ? JSON.parse(localStorage.getItem('fav')) : '',\r\n\tid: localStorage.getItem('fav') ? JSON.parse(localStorage.getItem('fav')) : []\r\n}\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n\r\n\tif (action.type === \"SET_CITY\") {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tcurrentCity: action.data\r\n\t\t}\r\n\t}\r\n\r\n\tif (action.type === \"ADD_CITY\") {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tid: [...state.id, action.data]\r\n\t\t}\r\n\t}\r\n\r\n\tif (action.type === \"REMOVE_CITY\") {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tid: state.id.filter(val => val !== action.data)\r\n\t\t}\r\n\t}\r\n\r\n\tif (action.type === \"SET_STORAGE\") {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tstorage: action.data\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn state;\r\n\r\n}\r\n\r\nexport default rootReducer;","import React from 'react';\nimport HomePage from './components/HomePage/HomePage';\nimport Info from './components/Info/Info';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer);\n\nconst App = () => {\n  \n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/info' component={Info} />\n        </Switch>  \n      </Router>\n     </Provider> \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}